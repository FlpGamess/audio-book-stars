import React, { useState } from "react";
import { Button } from "primereact/button";
import { ScrollPanel } from "primereact/scrollpanel";
import { Card } from "primereact/card";
import { InputText } from "primereact/inputtext";
import "primereact/resources/themes/lara-light-blue/theme.css";
import "primereact/resources/primereact.min.css";
import "primeicons/primeicons.css";
import "./style.css";

const BotoesComidas = () => {
  const [modoMultiplo, setModoMultiplo] = useState(false);
  const [selecionado, setSelecionado] = useState([]);
  const [filtro, setFiltro] = useState("");

  const opcoes = [
    "Pizza",
    "Sushi",
    "Hambúrguer",
    "Coxinha",
    "Lasanha",
    "Taco",
    "Churrasco",
    "Salada",
    "Pastel",
    "Hot Dog",
    "Pão de Queijo",
    "Feijoada",
    "Kebab",
    "Espaguete",
    "Frango Frito",
    "Batata Frita",
    "Risoto",
    "Burrito",
    "Temaki",
    "Moqueca",
  ];

  // Filtra as opções baseado no filtro, case-insensitive
  const opcoesFiltradas = opcoes.filter((comida) =>
    comida.toLowerCase().includes(filtro.toLowerCase())
  );

  const toggleComida = (comida) => {
    if (modoMultiplo) {
      setSelecionado((prev) =>
        prev.includes(comida)
          ? prev.filter((c) => c !== comida)
          : [...prev, comida]
      );
    } else {
      setSelecionado((prev) => (prev.includes(comida) ? [] : [comida]));
    }
  };

  const estaSelecionado = (comida) => selecionado.includes(comida);

  const selecionarTudo = () => {
    if (modoMultiplo) {
      // Seleciona todas as opções visíveis no filtro (para fazer sentido)
      setSelecionado([...opcoesFiltradas]);
    } else {
      setSelecionado(opcoesFiltradas.length > 0 ? [opcoesFiltradas[0]] : []);
    }
  };

  const desmarcarTudo = () => {
    setSelecionado([]);
  };

  return (
    <div className="card-wrapper">
      <Card title="Selecione uma Comida">
        <div style={{ display: "flex", gap: "16px", alignItems: "flex-start" }}>
          <ScrollPanel style={{ height: "180px", width: "400px" }}>
            <div className="botao-grid" style={{ flexDirection: "column" }}>
              {/* Linha dos botões modo múltiplo + selecionar/desmarcar tudo */}
              <div
                style={{
                  display: "flex",
                  gap: "8px",
                  marginBottom: "8px",
                  alignItems: "center",
                }}
              >
                <Button
                  label={
                    modoMultiplo ? "Modo Múltiplo: ON" : "Modo Múltiplo: OFF"
                  }
                  icon={modoMultiplo ? "pi pi-clone" : "pi pi-user"}
                  className={
                    modoMultiplo
                      ? "p-button-warning p-button-sm"
                      : "p-button-info p-button-sm"
                  }
                  onClick={() => {
                    setModoMultiplo(!modoMultiplo);
                    setSelecionado([]); // limpa seleção ao trocar modo
                  }}
                  style={{
                    fontSize: "0.7rem",
                    height: "26px",
                    width: "160px",
                  }}
                />

                <Button
                  label="Selecionar Tudo"
                  icon="pi pi-check-square"
                  className="p-button-sm p-button-success"
                  style={{ height: "26px", fontSize: "0.65rem" }}
                  onClick={selecionarTudo}
                />
                <Button
                  label="Desmarcar Tudo"
                  icon="pi pi-times-circle"
                  className="p-button-sm p-button-danger"
                  style={{ height: "26px", fontSize: "0.65rem" }}
                  onClick={desmarcarTudo}
                />
              </div>

              {/* Barra de pesquisa */}
              <div style={{ marginBottom: "8px" }}>
                <InputText
                  placeholder="Pesquisar comida..."
                  value={filtro}
                  onChange={(e) => setFiltro(e.target.value)}
                  style={{ width: "100%" }}
                  className="p-inputtext-sm"
                />
              </div>

              {/* Botões de comida filtrados */}
              <div
                style={{
                  display: "flex",
                  flexWrap: "wrap",
                  gap: "4px",
                }}
              >
                {opcoesFiltradas.length > 0 ? (
                  opcoesFiltradas.map((comida, index) => (
                    <Button
                      key={index}
                      label={comida}
                      onClick={() => toggleComida(comida)}
                      className={
                        estaSelecionado(comida)
                          ? "p-button-success p-button-sm"
                          : "p-button-outlined p-button-sm"
                      }
                      style={{
                        width: "calc(25% - 6px)",
                        height: "28px",
                        fontSize: "0.65rem",
                        whiteSpace: "nowrap",
                      }}
                    />
                  ))
                ) : (
                  <small>Nenhuma comida encontrada</small>
                )}
              </div>
            </div>
          </ScrollPanel>

          {/* Botões laterais Confirmar e Cancelar */}
          <div
            className="lateral-buttons"
            style={{ display: "flex", flexDirection: "column", gap: "6px" }}
          >
            <Button
              label="Confirmar"
              icon="pi pi-check"
              className="p-button-sm"
              style={{ width: "100px", height: "28px" }}
              onClick={() => alert(`Selecionado(s): ${selecionado.join(", ")}`)}
            />
            <Button
              label="Cancelar"
              icon="pi pi-times"
              className="p-button-secondary p-button-sm"
              style={{ width: "100px", height: "28px" }}
              onClick={() => setSelecionado([])}
            />
          </div>
        </div>
      </Card>
    </div>
  );
};

export default BotoesComidas;


/*fazer elas ficarem juntas*/

<Card title="Selecione Comidas por Coluna">
  {/* Div principal que agrupa TODAS as colunas e os botões laterais */}
  <div style={{ display: "flex", gap: "16px", alignItems: "flex-start" }}>
    
    {/* Início do loop para renderizar cada coluna */}
    {configs.map((col, colIndex) => {
      return (
        // Cada coluna completa (modo, ações, filtro e scroll)
        <div
          key={colIndex}
          style={{
            display: "flex",
            flexDirection: "column", // empilha os elementos verticalmente
            width: "240px", // largura fixa para alinhar com as demais colunas
          }}
        >
          {/* Botão de modo múltiplo (linha superior da coluna) */}
          <div style={{ marginBottom: "6px" }}>
            <Button ... />
          </div>

          {/* Linha com os botões "Selecionar Tudo" e "Desmarcar Tudo" */}
          <div style={{ display: "flex", gap: "6px", marginBottom: "6px" }}>
            <Button ... />
            <Button ... />
          </div>

          {/* Campo de pesquisa */}
          <InputText ... />

          {/* Painel de rolagem com os botões de comida */}
          <ScrollPanel style={{ height: "160px", width: "100%" }}>
            {/* Grid dos botões dentro do painel */}
            <div style={{ display: "flex", flexWrap: "wrap", gap: "4px" }}>
              {/* Botões gerados dinamicamente */}
              ...
            </div>
          </ScrollPanel>
        </div>
      );
    })}
    
    {/* Coluna final com os botões Confirmar e Cancelar */}
    <div style={{ display: "flex", flexDirection: "column", gap: "6px" }}>
      <Button ... />
      <Button ... />
    </div>
  </div>
</Card>



