import React, { useState } from "react";
import { DataTable } from "primereact/datatable";
import { Column } from "primereact/column";
import { MultiSelect } from "primereact/multiselect";
import { Dropdown } from "primereact/dropdown";
import { Button } from "primereact/button";

const TabelaComidas = () => {
  const dados = [
    {
      comida: "Pizza",
      preco: 35,
      acompanhamento: "Refrigerante",
      tipo: "Massa",
    },
    {
      comida: "Hambúrguer",
      preco: 28,
      acompanhamento: "Batata Frita",
      tipo: "Fast Food",
    },
    { comida: "Sushi", preco: 42, tipo: "Oriental" },
    {
      comida: "Lasanha",
      preco: 30,
      acompanhamento: "Salada Verde",
      tipo: "Massa",
    },
    { comida: "Tacos", preco: 25, tipo: "Mexicana" },
    {
      comida: "Churrasco",
      preco: 50,
      acompanhamento: "Farofa",
      tipo: "Brasileira",
    },
    { comida: "Feijoada", preco: 38, tipo: "Brasileira" },
    {
      comida: "Strogonoff",
      preco: 32,
      acompanhamento: "Batata Palha",
      tipo: "Brasileira",
    },
    {
      comida: "Nhoque",
      preco: 27,
      acompanhamento: "Molho de tomate",
      tipo: "Massa",
    },
    { comida: "Yakissoba", preco: 29, tipo: "Oriental" },
  ];

  // Estado filtro de tipos (multi/único)
  const [tiposSelecionados, setTiposSelecionados] = useState([]);
  const [modoMultiplo, setModoMultiplo] = useState(true);

  // Estado filtro de preço (único)
  const [precoSelecionado, setPrecoSelecionado] = useState(null);

  // Opções únicas para tipo
  const opcoesTipo = [...new Set(dados.map((d) => d.tipo))].map((tipo) => ({
    label: tipo,
    value: tipo,
  }));

  // Opções únicas para preço (ordena para melhorar UX)
  const opcoesPreco = [...new Set(dados.map((d) => d.preco))]
    .sort((a, b) => a - b)
    .map((preco) => ({
      label: `R$ ${preco}`,
      value: preco,
    }));

  // Alterna modo multi/único para filtro tipo
  const alternarModo = () => {
    const novoModo = !modoMultiplo;
    setModoMultiplo(novoModo);
    setTiposSelecionados([]); // limpa seleção ao mudar modo
  };

  // Filtra dados combinando os dois filtros (tipo e preço)
  const dadosFiltrados = dados.filter((item) => {
    // Verifica filtro tipo
    const filtroTipoOK =
      tiposSelecionados.length === 0 || tiposSelecionados.includes(item.tipo);

    // Verifica filtro preço
    const filtroPrecoOK =
      precoSelecionado === null || precoSelecionado === item.preco;

    return filtroTipoOK && filtroPrecoOK;
  });

  // Colunas dinâmicas com todas as chaves únicas
  const colunasDinamicas = [
    ...new Set(dados.flatMap((obj) => Object.keys(obj))),
  ];

  return (
    <div className="card flex flex-column gap-4">
      {/* Filtro por Tipo */}
      <div className="flex flex-column gap-2 md:w-20rem">
        <h3>Filtro por Tipo:</h3>
        <Button
          label={`Modo: ${modoMultiplo ? "Múltiplo" : "Único"}`}
          onClick={alternarModo}
        />
        <MultiSelect
          value={tiposSelecionados}
          options={opcoesTipo}
          onChange={(e) => {
            const valor = e.value || [];
            setTiposSelecionados(modoMultiplo ? valor : valor.slice(-1));
          }}
          placeholder="Selecione tipos"
          display="chip"
          filter
          className="w-full"
        />
      </div>

      {/* Filtro por Preço */}
      <div className="flex flex-column gap-2 md:w-20rem">
        <h3>Filtro por Preço:</h3>
        <Dropdown
          value={precoSelecionado}
          options={opcoesPreco}
          onChange={(e) => setPrecoSelecionado(e.value)}
          placeholder="Selecione preço"
          showClear
          className="w-full"
        />
      </div>

      {/* Tabela filtrada */}
      <DataTable
        value={dadosFiltrados}
        paginator
        rows={5}
        className="w-full"
        responsiveLayout="scroll"
      >
        {colunasDinamicas.map((chave) => (
          <Column
            key={chave}
            field={chave}
            header={chave.charAt(0).toUpperCase() + chave.slice(1)}
          />
        ))}
      </DataTable>
    </div>
  );
};

export default TabelaComidas;
